"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[846],{5298:e=>{e.exports=JSON.parse('{"functions":[{"name":"Destroy","desc":"Cleanup method which clears the entirity of the Data for the Object","params":[],"returns":[],"function_type":"method","source":{"line":140,"path":"src/Types/PublicZone.luau"}},{"name":"Relocate","desc":"Method that will Relocate the Zone to a WorldModel not in the Workspace","params":[],"returns":[{"desc":"Self Zone Object","lua_type":"Zone"}],"function_type":"method","source":{"line":150,"path":"src/Types/PublicZone.luau"}},{"name":"SetDetection","desc":"Method to Update/Set the Default Part/TrackedItem Detection of the Zone:","params":[{"name":"DetectionCoverage","desc":"DetectionCoverages Enum or Enum Id.","lua_type":"Enum.DetectionCoverages | number"},{"name":"DetectionMode","desc":"DetectionModes Enum or Enum Id.","lua_type":"Enum.DetectionModes | number"}],"returns":[],"function_type":"method","source":{"line":160,"path":"src/Types/PublicZone.luau"}},{"name":"SetRate","desc":"Method to Update/Set the Default Rate of the Zone:","params":[{"name":"Rate","desc":"Rates Enum or Enum Id.","lua_type":"Enum.Rates | number"}],"returns":[],"function_type":"method","source":{"line":169,"path":"src/Types/PublicZone.luau"}},{"name":"SetSimulation","desc":"Method to Update/Set the Default Simulation (RunService Event) of the Zone:","params":[{"name":"Simulation","desc":"Simulation Enum or Enum Id.","lua_type":"Enum.Simulations | number"}],"returns":[],"function_type":"method","source":{"line":178,"path":"src/Types/PublicZone.luau"}},{"name":"LogConfig","desc":"Method to print out all the Config Names","params":[],"returns":[],"function_type":"method","source":{"line":186,"path":"src/Types/PublicZone.luau"}},{"name":"GetZoneParts","desc":"Method to return the array of ZoneParts","params":[],"returns":[{"desc":"","lua_type":"{BasePart}"}],"function_type":"method","source":{"line":196,"path":"src/Types/PublicZone.luau"}},{"name":"GetZonePartHolders","desc":"Method to return the array of ZonePartHolders","params":[],"returns":[{"desc":"","lua_type":"{Instance}"}],"function_type":"method","source":{"line":206,"path":"src/Types/PublicZone.luau"}},{"name":"GetTouchingParts","desc":"Method to return an array of all BaseParts currently touching this Zone.\\n\\nWorks for both Box-style and Part-style Zones","params":[],"returns":[{"desc":"","lua_type":"{BasePart}"}],"function_type":"method","source":{"line":223,"path":"src/Types/PublicZone.luau"}},{"name":"Step","desc":"Method that can be called manually in a custom RunService event to step the Zone\'s detection logic\\n\\nOnly present if `ManualStepping` Config is true and the holder type is a group, if not, this method is removed","params":[{"name":"DeltaTime","desc":"RunService event DeltaTime.","lua_type":"number"}],"returns":[],"function_type":"method","source":{"line":234,"path":"src/Types/PublicZone.luau"}},{"name":"BindToGroup","desc":"Method that will BIND the Zone to the passed Group:","params":[{"name":"GroupName","desc":"Name of the already created group to bind the Zone to","lua_type":"string"}],"returns":[],"function_type":"method","source":{"line":243,"path":"src/Types/PublicZone.luau"}},{"name":"UnbindFromGroup","desc":"Method that will UNBIND the Zone to the passed Group:","params":[{"name":"GroupName","desc":"Name of the already created group to bind the Zone to","lua_type":"string"}],"returns":[],"function_type":"method","source":{"line":252,"path":"src/Types/PublicZone.luau"}},{"name":"InGroup","desc":"Method to return whether the Zone is in the group or not","params":[{"name":"GroupName","desc":"Name of the group to check","lua_type":"string"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"method","source":{"line":263,"path":"src/Types/PublicZone.luau"}}],"properties":[{"name":"Identifier","desc":"Identifier\\n\\nAccessed: `Zone.Identifier`","lua_type":"string","readonly":true,"source":{"line":81,"path":"src/Types/PublicZone.luau"}},{"name":"MetaData","desc":"Accessed: `Zone.MetaData`","lua_type":"any","source":{"line":87,"path":"src/Types/PublicZone.luau"}},{"name":"PlayerEntered","desc":"Accessed: `Zone.PlayerEntered`","lua_type":"Signal.Signal<Player>","tags":["event_signal"],"readonly":true,"source":{"line":94,"path":"src/Types/PublicZone.luau"}},{"name":"PlayerExited","desc":"Accessed: `Zone.PlayerExited`","lua_type":"Signal.Signal<Player>","tags":["event_signal"],"readonly":true,"source":{"line":101,"path":"src/Types/PublicZone.luau"}},{"name":"LocalPlayerEntered","desc":"Accessed: `Zone.LocalPlayerEntered`","lua_type":"Signal.Signal<Player>","tags":["event_signal"],"realm":["Client"],"readonly":true,"source":{"line":109,"path":"src/Types/PublicZone.luau"}},{"name":"LocalPlayerExited","desc":"Accessed: `Zone.LocalPlayerExited`","lua_type":"Signal.Signal<Player>","tags":["event_signal"],"realm":["Client"],"readonly":true,"source":{"line":117,"path":"src/Types/PublicZone.luau"}},{"name":"PartEntered","desc":"Accessed: `Zone.PartEntered`","lua_type":"Signal.Signal<BasePart>","tags":["event_signal"],"readonly":true,"source":{"line":124,"path":"src/Types/PublicZone.luau"}},{"name":"PartExited","desc":"Accessed: `Zone.PartExited`","lua_type":"Signal.Signal<BasePart>","tags":["event_signal"],"readonly":true,"source":{"line":131,"path":"src/Types/PublicZone.luau"}}],"types":[],"name":"Zone","desc":"","source":{"line":33,"path":"src/Types/PublicZone.luau"}}')}}]);