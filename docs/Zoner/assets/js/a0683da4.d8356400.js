"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[288],{1342:e=>{e.exports=JSON.parse('{"functions":[{"name":"GetEnums","desc":"","params":[],"returns":[{"desc":"The live registry of all enum tables","lua_type":"Enums"}],"function_type":"static","source":{"line":232,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"CreateEnum","desc":"Constructs and registers a new Enum2 under `Enums[EnumName]`.","params":[{"name":"EnumName","desc":"Name of the enum to create (registry key)","lua_type":"string"},{"name":"Details","desc":"Array of {Name, Value, Property?} tuples","lua_type":"{ {string, number, any?} }"}],"returns":[],"function_type":"static","source":{"line":243,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"Start","desc":"Initializes the registry by requiring every ModuleScript under `script.Enum2s`\\nand calling `CreateEnum` with its contents. Safe to call once.","params":[],"returns":[],"function_type":"static","source":{"line":263,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"New","desc":"Internal constructor for an `Enum2`.","params":[{"name":"EnumName","desc":"Enum name (registry key)","lua_type":"string"},{"name":"Details","desc":"Item tuples","lua_type":"{ {string, number, any?} }"}],"returns":[{"desc":"Constructed enum object","lua_type":"Enum2"}],"function_type":"static","private":true,"source":{"line":315,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"Destroy","desc":"Removes the enum from the registry and clears its data.","params":[{"name":"self","desc":"Enum object to destroy","lua_type":"Enum2"}],"returns":[],"function_type":"method","private":true,"source":{"line":421,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"GetName","desc":"","params":[{"name":"self","desc":"","lua_type":"Enum2"},{"name":"valueOrProperty","desc":"Numeric value or property payload/name","lua_type":"any"}],"returns":[{"desc":"Item name or \\"Failure\\"","lua_type":"string"}],"function_type":"method","source":{"line":452,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"GetValue","desc":"","params":[{"name":"self","desc":"","lua_type":"Enum2"},{"name":"nameOrProperty","desc":"Item name or property payload/name","lua_type":"any"}],"returns":[{"desc":"Numeric id or \\"Failure\\"","lua_type":"number | \\"Failure\\""}],"function_type":"method","source":{"line":482,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"GetProperty","desc":"","params":[{"name":"self","desc":"","lua_type":"Enum2"},{"name":"nameOrValue","desc":"Item name or numeric value","lua_type":"any"}],"returns":[{"desc":"Associated property payload or \\"Failure\\"","lua_type":"any | \\"Failure\\""}],"function_type":"method","source":{"line":511,"path":"src/Modules/Internal/Enums/init.luau"}}],"properties":[{"name":"DetectionMethod","desc":"","lua_type":"DetectionMethod","readonly":true,"source":{"line":134,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"DetectionMode","desc":"","lua_type":"DetectionMode","readonly":true,"source":{"line":148,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"DetectionCoverage","desc":"","lua_type":"DetectionCoverage","readonly":true,"source":{"line":162,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"Rate","desc":"","lua_type":"Rate","readonly":true,"source":{"line":177,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"Execution","desc":"","lua_type":"Execution","since":"0.9.9","readonly":true,"source":{"line":191,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"Simulation","desc":"","lua_type":"Simulation","since":"0.9.9","readonly":true,"source":{"line":206,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"Bounds","desc":"","lua_type":"Bounds","readonly":true,"source":{"line":221,"path":"src/Modules/Internal/Enums/init.luau"}}],"types":[{"name":"Enums","desc":"Map of enum name \u2192 Enum2 object.","lua_type":"{[string]: Enum2}","source":{"line":59,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"EnumItem","desc":"","fields":[{"name":"Name","lua_type":"string","desc":"Display name of the item (e.g. \\"Fast\\")"},{"name":"Value","lua_type":"number","desc":"Numeric id returned when indexing by name"},{"name":"Property","lua_type":"any?","desc":"Optional associated property payload"}],"source":{"line":67,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"Enum2","desc":"Represents one named enum table. Indexing with an item name returns the **number** id:\\n`Enums.Rate.Fast` \u2192 `number`.","fields":[{"name":"Name","lua_type":"string","desc":"Enum name"},{"name":"Enums","lua_type":"{EnumItem}","desc":"Ordered items for iteration"},{"name":"Values","lua_type":"{[string]: number}","desc":"Value-string \u2192 index lookup"},{"name":"Names","lua_type":"{[string]: number}","desc":"Name \u2192 index lookup"},{"name":"Properties","lua_type":"{[string]: number}","desc":"Property-string \u2192 index lookup"},{"name":"GetName","lua_type":"(self: Enum2, valueOrProperty: any) -> string","desc":"Return item name or \\"Failure\\""},{"name":"GetValue","lua_type":"(self: Enum2, nameOrProperty: any) -> (number | \\"Failure\\")","desc":"Return numeric id or \\"Failure\\""},{"name":"GetProperty","lua_type":"(self: Enum2, nameOrValue: any) -> (any | \\"Failure\\")","desc":"Return property payload or \\"Failure\\""}],"source":{"line":85,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"DetectionMethod","desc":"","fields":[{"name":"Automatic","lua_type":"number","desc":"Auto-pick based on container shape & coverage/mode;"},{"name":"Efficient","lua_type":"number","desc":"Fastest. Uses simple CFrame and Size math checks to determine location in the Zone Volume."},{"name":"Simple","lua_type":"number","desc":"Balanced: may use `GetPartBoundsInBox/Radius` for modest cost and good fidelity."},{"name":"Complex","lua_type":"number","desc":"Highest accuracy: per-part or mesh-aware paths like `GetPartsInPart`; most expensive. If ZoneContainer has no Instances, they will be created."}],"source":{"line":129,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"DetectionMode","desc":"","fields":[{"name":"Full","lua_type":"number","desc":"Target must be fully inside or outside the Zone bounds to trigger entrance or exit."},{"name":"Touch","lua_type":"number","desc":"Any intersection with the zone boundary counts (partial overlap). (Doesn\'t actually use .Touched)"},{"name":"Point","lua_type":"number","desc":"One or more representative points must be inside (fastest). Often pairs with Efficient math tests."}],"source":{"line":143,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"DetectionCoverage","desc":"","fields":[{"name":"Center","lua_type":"number","desc":"Check only the target\'s center point (very fast). Often math-only."},{"name":"AllParts","lua_type":"number","desc":"Every relevant part/point must satisfy `DetectionMode` (strict)."},{"name":"AnyPart","lua_type":"number","desc":"At least one relevant part/point must satisfy `DetectionMode` (lenient)."}],"source":{"line":157,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"Rate","desc":"","fields":[{"name":"Slow","lua_type":"number","desc":"Step period \u2248 **1.0 s** between evaluations."},{"name":"Moderate","lua_type":"number","desc":"Step period \u2248 **0.5 s**."},{"name":"Fast","lua_type":"number","desc":"Step period \u2248 **0.1 s**."},{"name":"Immediate","lua_type":"number","desc":"Step period **0 s** (continuous / every frame slice)."}],"source":{"line":172,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"Execution","desc":"","fields":[{"name":"Serial","lua_type":"number","desc":"Single-threaded group holder. Supports manual stepping via `Zone:Step(...)` when `ManualStepping = true`."},{"name":"Parallel","lua_type":"number","desc":"Actor-backed parallel evaluation. Manual stepping not exposed; runs on its own schedule. Fastest with lots of Zones."}],"source":{"line":185,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"Simulation","desc":"","fields":[{"name":"PostSimulation","lua_type":"number","desc":"Run after physics; safe for effects based on final transforms."},{"name":"PreSimulation","lua_type":"number","desc":"Run before physics; good for preparing forces/constraints."},{"name":"PreRender","lua_type":"number","desc":"Run before rendering (client). On server, requests are coerced to PostSimulation."}],"source":{"line":200,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"Bounds","desc":"","fields":[{"name":"Automatic","lua_type":"number","desc":"Auto-select bounds model from the container (boxes/spheres vs per-part)."},{"name":"BoxExact","lua_type":"number","desc":"Automatically creates a Rotated Box (No Instance unless specified) that fits the sum of the ZoneContainer"},{"name":"BoxVoxel","lua_type":"number","desc":"Automatically creates a Rotated Box (No Instance unless specified) that fits the sum of the ZoneContainer, then rounds to Voxel Grid"},{"name":"PerPart","lua_type":"number","desc":"Evaluate each contained BasePart or {CFrame, Size} individually as the sum of the whole Zone."}],"source":{"line":216,"path":"src/Modules/Internal/Enums/init.luau"}},{"name":"DetectionMethods","desc":"","lua_type":"\'Automatic\' | \'Efficient\' | \'Simple\' | \'Complex\'","source":{"line":22,"path":"src/Modules/Internal/Enums/Types/init.luau"}},{"name":"DetectionModes","desc":"","lua_type":"\'Full\' | \'Touch\' | \'Point\' | \'Automatic\'","source":{"line":26,"path":"src/Modules/Internal/Enums/Types/init.luau"}},{"name":"DetectionCoverages","desc":"","lua_type":"\'Center\' | \'AllParts\' | \'AnyPart\' | \'Automatic\'","source":{"line":30,"path":"src/Modules/Internal/Enums/Types/init.luau"}},{"name":"Rates","desc":"","lua_type":"\'Slow\' | \'Moderate\' | \'Fast\' | \'Immediate\'","source":{"line":34,"path":"src/Modules/Internal/Enums/Types/init.luau"}},{"name":"Executions","desc":"","lua_type":"\'Parallel\' | \'Serial\'","source":{"line":38,"path":"src/Modules/Internal/Enums/Types/init.luau"}},{"name":"Simulations","desc":"","lua_type":"\'PreRender\' | \'PostSimulation\' | \'PreSimulation\'","source":{"line":42,"path":"src/Modules/Internal/Enums/Types/init.luau"}}],"name":"Enums","desc":"Runtime registry of all Zoner enum tables.  \\nAt startup, `EnumsModule:Start()` scans `script.Enum2s` and creates a numeric\\nenum object for each ModuleScript it finds (e.g. `DetectionMethod`, `Rate`, etc.).\\n\\n**Design**\\n- Each enum is an **Enum2** object (documented below).\\n- Indexing by name returns a **number** (`Enums.DetectionMode.Point` \u2192 `number`).\\n- Reflection helpers: `:GetName(value)`, `:GetValue(name)`, `:GetProperty(nameOrValue?)`.\\n\\n**Common enums**\\n- `DetectionMethod`, `DetectionMode`, `DetectionCoverage`\\n- `Rate`, `Execution`, `Simulation`, `Bounds`","source":{"line":43,"path":"src/Modules/Internal/Enums/init.luau"}}')}}]);