{"searchDocs":[{"title":"Private_Zone","type":0,"sectionRef":"#","url":"/docs/Zoner/api/Private_Zone","content":"","keywords":"","version":null},{"title":"Functions​","type":1,"pageTitle":"Private_Zone","url":"/docs/Zoner/api/Private_Zone#functions","content":" ","version":null,"tagName":"h2"},{"title":"Destroy​","type":1,"pageTitle":"Private_Zone","url":"/docs/Zoner/api/Private_Zone#Destroy","content":"&lt;/&gt; Private_Zone:Destroy() → () Cleans up signals, connections, tags, engine, groups, and backing instances. Sets Destroyed = true and clears the holder’s Id attribute to trigger removal.  ","version":null,"tagName":"h3"},{"title":"BindToGroup​","type":1,"pageTitle":"Private_Zone","url":"/docs/Zoner/api/Private_Zone#BindToGroup","content":"&lt;/&gt; Private_Zone:BindToGroup( GroupName: string-- Group to bind ) → () Binds this zone to an existing group (sets true in the group’s Zones attributes).  ","version":null,"tagName":"h3"},{"title":"UnbindFromGroup​","type":1,"pageTitle":"Private_Zone","url":"/docs/Zoner/api/Private_Zone#UnbindFromGroup","content":"&lt;/&gt; Private_Zone:UnbindFromGroup( GroupName: string-- Group to unbind ) → () Unbinds this zone from a group (clears the Id attribute in the group’s Zones).  ","version":null,"tagName":"h3"},{"title":"Relocate​","type":1,"pageTitle":"Private_Zone","url":"/docs/Zoner/api/Private_Zone#Relocate","content":"&lt;/&gt; Private_Zone:Relocate() → Zone-- Self (for chaining) Moves the zone’s parts under a WorldModel container. Sets Relocated = true.  ","version":null,"tagName":"h3"},{"title":"SetDetection​","type":1,"pageTitle":"Private_Zone","url":"/docs/Zoner/api/Private_Zone#SetDetection","content":"&lt;/&gt; Private_Zone:SetDetection( DetectionCoverage: Enums.DetectionCoverages | number,-- Coverage enum or id DetectionMode: Enums.DetectionModes | number-- Mode enum or id ) → () Updates the default detection coverage and mode.  ","version":null,"tagName":"h3"},{"title":"SetRate​","type":1,"pageTitle":"Private_Zone","url":"/docs/Zoner/api/Private_Zone#SetRate","content":"&lt;/&gt; Private_Zone:SetRate( Rate: Enums.Rates | number-- Rate enum or id ) → () Updates the evaluation rate used by this zone.  ","version":null,"tagName":"h3"},{"title":"SetSimulation​","type":1,"pageTitle":"Private_Zone","url":"/docs/Zoner/api/Private_Zone#SetSimulation","content":"&lt;/&gt; Private_Zone:SetSimulation( Simulation: Enums.Simulations | number-- Simulation enum or id ) → () Updates the simulation step (rejects PreRender on server).  ","version":null,"tagName":"h3"},{"title":"LogConfig​","type":1,"pageTitle":"Private_Zone","url":"/docs/Zoner/api/Private_Zone#LogConfig","content":"&lt;/&gt; Private_Zone:LogConfig() → () Prints a human-readable summary of the zone’s current configuration.  ","version":null,"tagName":"h3"},{"title":"GetZoneParts​","type":1,"pageTitle":"Private_Zone","url":"/docs/Zoner/api/Private_Zone#GetZoneParts","content":"&lt;/&gt; Private_Zone:GetZoneParts() → {BasePart }-- Array of parts Returns the BaseParts that compose this zone (empty for partless boxes).  ","version":null,"tagName":"h3"},{"title":"GetZonePartHolders​","type":1,"pageTitle":"Private_Zone","url":"/docs/Zoner/api/Private_Zone#GetZonePartHolders","content":"&lt;/&gt; Private_Zone:GetZonePartHolders() → {Instance }-- Array of holder instances Returns holder instances (Folders/Models) that own the zone’s parts.  ","version":null,"tagName":"h3"},{"title":"InGroup​","type":1,"pageTitle":"Private_Zone","url":"/docs/Zoner/api/Private_Zone#InGroup","content":"since 0.9.6 &lt;/&gt; Private_Zone:InGroup( GroupName: string-- Group to check ) → boolean-- True if the zone is in the group Checks whether this zone is currently present in a named group.  ","version":null,"tagName":"h3"},{"title":"GetRandomPoint​","type":1,"pageTitle":"Private_Zone","url":"/docs/Zoner/api/Private_Zone#GetRandomPoint","content":"since 0.9.7 &lt;/&gt; Private_Zone:GetRandomPoint() → Vector3 -- Point inside the zone Returns a random point inside the zone volume. Works with part-backed shapes (block/sphere/complex) and partless boxes.  ","version":null,"tagName":"h3"},{"title":"GetTouchingParts​","type":1,"pageTitle":"Private_Zone","url":"/docs/Zoner/api/Private_Zone#GetTouchingParts","content":"since 0.9.7 &lt;/&gt; Private_Zone:GetTouchingParts() → {BasePart }-- Array of overlapping parts Returns all BaseParts currently overlapping this zone’s bounds.  ","version":null,"tagName":"h3"},{"title":"Step​","type":1,"pageTitle":"Private_Zone","url":"/docs/Zoner/api/Private_Zone#Step","content":"&lt;/&gt; Private_Zone:Step( DeltaTime: number-- RunService delta time ) → () Manually steps detection. Present only when ManualStepping = true and the zone is hosted in a serial holder (group). ","version":null,"tagName":"h3"},{"title":"Groups","type":0,"sectionRef":"#","url":"/docs/Zoner/api/Groups","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups#types","content":" ","version":null,"tagName":"h2"},{"title":"ZoneGroupData​","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups#ZoneGroupData","content":"since 0.9.9 &lt;/&gt; interface ZoneGroupData { Zones: {[string]: true?}-- Map of ZoneId -&gt; true (present) or nil (absent) for O(1) membership checks. ZonesFolder: Configuration -- Reference to the group's Zones folder (source of truth via attributes). Properties: ZoneGroupProperties-- Snapshot of group properties from GetAttributes() on the group. AttributeChanged: RBXScriptConnection -- Connection tracking attribute changes on ZonesFolder. }   ","version":null,"tagName":"h3"},{"title":"ZoneGroups​","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups#ZoneGroups","content":"&lt;/&gt; type ZoneGroups = {[string]: ZoneGroupData} Map of group name -&gt; ZoneGroupData. ","version":null,"tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups#properties","content":" ","version":null,"tagName":"h2"},{"title":"ZoneGroups​","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups#ZoneGroups","content":"&lt;/&gt; Groups.ZoneGroups: ZoneGroups Holds all known groups keyed by group name. Populated by InitializeActorListeners. Cleared by DeinitializeActorListeners.  ","version":null,"tagName":"h3"},{"title":"ZoneGroupAdded​","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups#ZoneGroupAdded","content":"&lt;/&gt; Groups.ZoneGroupAdded: RBXScriptConnection?  Connection for when a group is added under ZonerFolder.Groups. Established by InitializeActorListeners.  ","version":null,"tagName":"h3"},{"title":"ZoneGroupRemoved​","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups#ZoneGroupRemoved","content":"&lt;/&gt; Groups.ZoneGroupRemoved: RBXScriptConnection?  Connection for when a group is removed from ZonerFolder.Groups. Established by InitializeActorListeners.  ","version":null,"tagName":"h3"},{"title":"ActorInitialized​","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups#ActorInitialized","content":"&lt;/&gt; Groups.ActorInitialized: boolean Whether this Groups singleton has been initialized by the VM that required it. ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups#functions","content":" ","version":null,"tagName":"h2"},{"title":"InitializeActorListeners​","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups#InitializeActorListeners","content":"since 0.9.9 &lt;/&gt; Groups.InitializeActorListeners( ZonerFolder: Types.ZonerFolder-- The root folder containing the Groups container and group children. ) → () Initialize listeners on the root Zoner folder (per VM). Scans existing groups under ZonerFolder.Groups and attaches listeners so the internal cache mirrors: Group property attributes on the group folder. Zone membership attributes on each group's Zones configuration.  ","version":null,"tagName":"h3"},{"title":"DeinitializeActorListeners​","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups#DeinitializeActorListeners","content":"since 0.9.9 &lt;/&gt; Groups.DeinitializeActorListeners() → () Stop and clean up all listeners and cached state created by InitializeActorListeners. Disconnects per-group attribute listeners, clears cached maps, and disconnects group add/remove listeners.  ","version":null,"tagName":"h3"},{"title":"IsZoneInGroup​","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups#IsZoneInGroup","content":"since 0.9.9 &lt;/&gt; Groups.IsZoneInGroup( ZoneId: string,-- The Zone identifier (attribute name on the group's Zones folder). GroupKey: string-- The group name key (index into ZoneGroups). ) → boolean-- Whether the given ZoneId is part of the group right now. Check whether a ZoneId is currently recorded in a given group.  ","version":null,"tagName":"h3"},{"title":"CreateGroup​","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups#CreateGroup","content":"since 0.9.9 &lt;/&gt; Groups.CreateGroup( GroupName: string,-- Name of the group to create. Properties: ZoneGroupProperties,-- Properties to set as attributes on the group. ZonerFolder: Types.ZonerFolder-- The owning Zoner folder for this VM. ) → () ","version":null,"tagName":"h3"},{"title":"Types","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups##","content":"","version":null,"tagName":"h3"},{"title":"​","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups#ZoneGroupProperties","content":"interface ZoneGroupProperties { Exclusive: boolean-- Whether tracked items can be in more than one zone of this group simultaneously. }  Create a new group folder under ZonerFolder.Groups for serial execution contexts, mirror its properties, and begin listening to its Zones attributes.  ","version":null,"tagName":"h3"},{"title":"AddZoneToGroup​","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups#AddZoneToGroup","content":"since 0.9.9 &lt;/&gt; Groups.AddZoneToGroup( ZoneId: string,-- Zone identifier to add. GroupName: string,-- Target group key. ZonerFolder: Types.ZonerFolder-- The owning Zoner folder for this VM. ) → () Bind a zone to a group in serial contexts by setting the ID attribute on the group's Zones config and updating the in-memory cache.  ","version":null,"tagName":"h3"},{"title":"RemoveZoneFromGroup​","type":1,"pageTitle":"Groups","url":"/docs/Zoner/api/Groups#RemoveZoneFromGroup","content":"since 0.9.9 &lt;/&gt; Groups.RemoveZoneFromGroup( ZoneId: string,-- Zone identifier to remove. GroupName: string,-- Target group key. ZonerFolder: Types.ZonerFolder-- The owning Zoner folder for this VM. ) → () Unbind a zone from a group in serial contexts by clearing the ID attribute and cache entry. ","version":null,"tagName":"h3"},{"title":"Enums","type":0,"sectionRef":"#","url":"/docs/Zoner/api/Enums","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#types","content":" ","version":null,"tagName":"h2"},{"title":"Enums​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#Enums","content":"&lt;/&gt; type Enums = {[string]: Enum2} Map of enum name → Enum2 object.  ","version":null,"tagName":"h3"},{"title":"EnumItem​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#EnumItem","content":"&lt;/&gt; interface EnumItem { Name: string-- Display name of the item (e.g. &quot;Fast&quot;) Value: number-- Numeric id returned when indexing by name Property: any?-- Optional associated property payload }   ","version":null,"tagName":"h3"},{"title":"Enum2​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#Enum2","content":"&lt;/&gt; interface Enum2 { Name: string-- Enum name Enums: {EnumItem}-- Ordered items for iteration Values: {[string]: number}-- Value-string → index lookup Names: {[string]: number}-- Name → index lookup Properties: {[string]: number}-- Property-string → index lookup GetName: ( self: Enum2, valueOrProperty: any ) → string-- Return item name or &quot;Failure&quot; GetValue: ( self: Enum2, nameOrProperty: any ) → (number | &quot;Failure&quot;)-- Return numeric id or &quot;Failure&quot; GetProperty: ( self: Enum2, nameOrValue: any ) → (any | &quot;Failure&quot;)-- Return property payload or &quot;Failure&quot; } Represents one named enum table. Indexing with an item name returns the number id: Enums.Rate.Fast → number.  ","version":null,"tagName":"h3"},{"title":"DetectionMethod​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#DetectionMethod","content":"&lt;/&gt; interface DetectionMethod { Automatic: number-- Auto-pick based on container shape &amp; coverage/mode; Efficient: number-- Fastest. Uses simple CFrame and Size math checks to determine location in the Zone Volume. Simple: number-- Balanced: may use GetPartBoundsInBox/Radius for modest cost and good fidelity. Complex: number-- Highest accuracy: per-part or mesh-aware paths like GetPartsInPart; most expensive. If ZoneContainer has no Instances, they will be created. }   ","version":null,"tagName":"h3"},{"title":"DetectionMode​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#DetectionMode","content":"&lt;/&gt; interface DetectionMode { Full: number-- Target must be fully inside or outside the Zone bounds to trigger entrance or exit. Touch: number-- Any intersection with the zone boundary counts (partial overlap). (Doesn't actually use .Touched) Point: number-- One or more representative points must be inside (fastest). Often pairs with Efficient math tests. }   ","version":null,"tagName":"h3"},{"title":"DetectionCoverage​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#DetectionCoverage","content":"&lt;/&gt; interface DetectionCoverage { Center: number-- Check only the target's center point (very fast). Often math-only. AllParts: number-- Every relevant part/point must satisfy DetectionMode (strict). AnyPart: number-- At least one relevant part/point must satisfy DetectionMode (lenient). }   ","version":null,"tagName":"h3"},{"title":"Rate​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#Rate","content":"&lt;/&gt; interface Rate { Slow: number-- Step period ≈ 1.0 s between evaluations. Moderate: number-- Step period ≈ 0.5 s. Fast: number-- Step period ≈ 0.1 s. Immediate: number-- Step period 0 s (continuous / every frame slice). }   ","version":null,"tagName":"h3"},{"title":"Execution​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#Execution","content":"&lt;/&gt; interface Execution { Serial: number-- Single-threaded group holder. Supports manual stepping via Zone:Step(...) when ManualStepping = true. Parallel: number-- Actor-backed parallel evaluation. Manual stepping not exposed; runs on its own schedule. Fastest with lots of Zones. }   ","version":null,"tagName":"h3"},{"title":"Simulation​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#Simulation","content":"&lt;/&gt; interface Simulation { PostSimulation: number-- Run after physics; safe for effects based on final transforms. PreSimulation: number-- Run before physics; good for preparing forces/constraints. PreRender: number-- Run before rendering (client). On server, requests are coerced to PostSimulation. }   ","version":null,"tagName":"h3"},{"title":"Bounds​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#Bounds","content":"&lt;/&gt; interface Bounds { Automatic: number-- Auto-select bounds model from the container (boxes/spheres vs per-part). BoxExact: number-- Automatically creates a Rotated Box (No Instance unless specified) that fits the sum of the ZoneContainer BoxVoxel: number-- Automatically creates a Rotated Box (No Instance unless specified) that fits the sum of the ZoneContainer, then rounds to Voxel Grid PerPart: number-- Evaluate each contained BasePart or {CFrame, Size} individually as the sum of the whole Zone. }   ","version":null,"tagName":"h3"},{"title":"DetectionMethods​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#DetectionMethods","content":"&lt;/&gt; type DetectionMethods = 'Automatic' | 'Efficient' | 'Simple' | 'Complex'   ","version":null,"tagName":"h3"},{"title":"DetectionModes​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#DetectionModes","content":"&lt;/&gt; type DetectionModes = 'Full' | 'Touch' | 'Point' | 'Automatic'   ","version":null,"tagName":"h3"},{"title":"DetectionCoverages​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#DetectionCoverages","content":"&lt;/&gt; type DetectionCoverages = 'Center' | 'AllParts' | 'AnyPart' | 'Automatic'   ","version":null,"tagName":"h3"},{"title":"Rates​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#Rates","content":"&lt;/&gt; type Rates = 'Slow' | 'Moderate' | 'Fast' | 'Immediate'   ","version":null,"tagName":"h3"},{"title":"Executions​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#Executions","content":"&lt;/&gt; type Executions = 'Parallel' | 'Serial'   ","version":null,"tagName":"h3"},{"title":"Simulations​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#Simulations","content":"&lt;/&gt; type Simulations = 'PreRender' | 'PostSimulation' | 'PreSimulation'  ","version":null,"tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#properties","content":" ","version":null,"tagName":"h2"},{"title":"DetectionMethod​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#DetectionMethod","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Enums.DetectionMethod: DetectionMethod   ","version":null,"tagName":"h3"},{"title":"DetectionMode​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#DetectionMode","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Enums.DetectionMode: DetectionMode   ","version":null,"tagName":"h3"},{"title":"DetectionCoverage​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#DetectionCoverage","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Enums.DetectionCoverage: DetectionCoverage   ","version":null,"tagName":"h3"},{"title":"Rate​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#Rate","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Enums.Rate: Rate   ","version":null,"tagName":"h3"},{"title":"Execution​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#Execution","content":"This item is read only and cannot be modified. Read Only since 0.9.9 &lt;/&gt; Enums.Execution: Execution   ","version":null,"tagName":"h3"},{"title":"Simulation​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#Simulation","content":"This item is read only and cannot be modified. Read Only since 0.9.9 &lt;/&gt; Enums.Simulation: Simulation   ","version":null,"tagName":"h3"},{"title":"Bounds​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#Bounds","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Enums.Bounds: Bounds  ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#functions","content":" ","version":null,"tagName":"h2"},{"title":"GetEnums​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#GetEnums","content":"&lt;/&gt; Enums.GetEnums() → Enums-- The live registry of all enum tables   ","version":null,"tagName":"h3"},{"title":"CreateEnum​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#CreateEnum","content":"&lt;/&gt; Enums.CreateEnum( EnumName: string,-- Name of the enum to create (registry key) Details: {{ string, number, any? }}-- Array of {Name, Value, Property?} tuples ) → () Constructs and registers a new Enum2 under Enums[EnumName].  ","version":null,"tagName":"h3"},{"title":"Start​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#Start","content":"&lt;/&gt; Enums.Start() → () Initializes the registry by requiring every ModuleScript under script.Enum2s and calling CreateEnum with its contents. Safe to call once.  ","version":null,"tagName":"h3"},{"title":"GetName​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#GetName","content":"&lt;/&gt; Enums:GetName( self: Enum2, valueOrProperty: any-- Numeric value or property payload/name ) → string-- Item name or &quot;Failure&quot;   ","version":null,"tagName":"h3"},{"title":"GetValue​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#GetValue","content":"&lt;/&gt; Enums:GetValue( self: Enum2, nameOrProperty: any-- Item name or property payload/name ) → number | &quot;Failure&quot;-- Numeric id or &quot;Failure&quot;   ","version":null,"tagName":"h3"},{"title":"GetProperty​","type":1,"pageTitle":"Enums","url":"/docs/Zoner/api/Enums#GetProperty","content":"&lt;/&gt; Enums:GetProperty( self: Enum2, nameOrValue: any-- Item name or numeric value ) → any | &quot;Failure&quot;-- Associated property payload or &quot;Failure&quot;  ","version":null,"tagName":"h3"},{"title":"Zone","type":0,"sectionRef":"#","url":"/docs/Zoner/api/Zone","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#types","content":" ","version":null,"tagName":"h2"},{"title":"ZoneContainerType​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#ZoneContainerType","content":"private_types &lt;/&gt; type ZoneContainerType = ('Part' | 'Holder' | 'Parts' | 'Boxes') Discriminates container representation (&quot;Boxes&quot; or &quot;Instance&quot; flavors)  ","version":null,"tagName":"h3"},{"title":"ZoneParts​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#ZoneParts","content":"private_types &lt;/&gt; type ZoneParts = {BasePart } An array of BaseParts ","version":null,"tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#properties","content":" ","version":null,"tagName":"h2"},{"title":"Container​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#Container","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Zone.Container: ZoneContainer Original container used to construct the Zone (instance tree or partless box table). Accessed: Zone.Container  ","version":null,"tagName":"h3"},{"title":"ContainerType​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#ContainerType","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Zone.ContainerType: ZoneContainerType Indicates whether the Zone is part-backed or partless (boxes).  ","version":null,"tagName":"h3"},{"title":"Active​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#Active","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Zone.Active: boolean True while any targets/signals are currently active for this Zone.  ","version":null,"tagName":"h3"},{"title":"Destroyed​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#Destroyed","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Zone.Destroyed: boolean Set to true after Destroy() is called.  ","version":null,"tagName":"h3"},{"title":"Paused​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#Paused","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Zone.Paused: boolean True when detection is paused for this Zone.  ","version":null,"tagName":"h3"},{"title":"Visible​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#Visible","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Zone.Visible: boolean Optional visual/debug flag for this Zone.  ","version":null,"tagName":"h3"},{"title":"Detection​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#Detection","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Zone.Detection: number Current detection level value (enum id). Use SetDetection(...) to change coverage/mode.  ","version":null,"tagName":"h3"},{"title":"Accuracy​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#Accuracy","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Zone.Accuracy: number Accuracy tuning value (enum id), dependent on detection method.  ","version":null,"tagName":"h3"},{"title":"Simulation​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#Simulation","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Zone.Simulation: number Simulation step (enum id). Set via SetSimulation(...).  ","version":null,"tagName":"h3"},{"title":"Execution​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#Execution","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Zone.Execution: number Execution model (enum id): Serial/Parallel as provided by Zoner.Enum.Execution.  ","version":null,"tagName":"h3"},{"title":"EnterDetection​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#EnterDetection","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Zone.EnterDetection: number Enter detection mode/coverage as an enum id. Adjustable via SetDetection(...) and related setters.  ","version":null,"tagName":"h3"},{"title":"ExitDetection​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#ExitDetection","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Zone.ExitDetection: number Exit detection mode/coverage as an enum id.  ","version":null,"tagName":"h3"},{"title":"Identifier​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#Identifier","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Zone.Identifier: string Stable string ID for this Zone (unique within Zoner’s session). Accessed: Zone.Identifier  ","version":null,"tagName":"h3"},{"title":"MetaData​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#MetaData","content":"&lt;/&gt; Zone.MetaData: any Free-form table you can attach to this Zone for your own bookkeeping.  ","version":null,"tagName":"h3"},{"title":"PlayerEntered​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#PlayerEntered","content":"This item is read only and cannot be modified. Read Only event_signal &lt;/&gt; Zone.PlayerEntered: Signal.Signal&lt;Player &gt; Accessed: Zone.PlayerEntered  ","version":null,"tagName":"h3"},{"title":"PlayerExited​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#PlayerExited","content":"This item is read only and cannot be modified. Read Only event_signal &lt;/&gt; Zone.PlayerExited: Signal.Signal&lt;Player &gt; Accessed: Zone.PlayerExited  ","version":null,"tagName":"h3"},{"title":"LocalPlayerEntered​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#LocalPlayerEntered","content":"This item only works when running on the client. Client This item is read only and cannot be modified. Read Only event_signal &lt;/&gt; Zone.LocalPlayerEntered: Signal.Signal&lt;Player &gt; Accessed: Zone.LocalPlayerEntered  ","version":null,"tagName":"h3"},{"title":"LocalPlayerExited​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#LocalPlayerExited","content":"This item only works when running on the client. Client This item is read only and cannot be modified. Read Only event_signal &lt;/&gt; Zone.LocalPlayerExited: Signal.Signal&lt;Player &gt; Accessed: Zone.LocalPlayerExited  ","version":null,"tagName":"h3"},{"title":"PartEntered​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#PartEntered","content":"This item is read only and cannot be modified. Read Only event_signal &lt;/&gt; Zone.PartEntered: Signal.Signal&lt;BasePart &gt; Accessed: Zone.PartEntered  ","version":null,"tagName":"h3"},{"title":"PartExited​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#PartExited","content":"This item is read only and cannot be modified. Read Only event_signal &lt;/&gt; Zone.PartExited: Signal.Signal&lt;BasePart &gt; Accessed: Zone.PartExited ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#functions","content":" ","version":null,"tagName":"h2"},{"title":"Destroy​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#Destroy","content":"&lt;/&gt; Zone:Destroy() → () Cleans up signals, connections, tags, and backing instances for this Zone.  ","version":null,"tagName":"h3"},{"title":"Relocate​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#Relocate","content":"&lt;/&gt; Zone:Relocate() → Zone-- Self Zone Object Method that will Relocate the Zone to a WorldModel not in the Workspace  ","version":null,"tagName":"h3"},{"title":"SetDetection​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#SetDetection","content":"&lt;/&gt; Zone:SetDetection( DetectionCoverage: Enum.DetectionCoverages | number,-- DetectionCoverages Enum or Enum Id. DetectionMode: Enum.DetectionModes | number-- DetectionModes Enum or Enum Id. ) → () Method to Update/Set the Default Part/TrackedItem Detection of the Zone:  ","version":null,"tagName":"h3"},{"title":"SetRate​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#SetRate","content":"&lt;/&gt; Zone:SetRate( Rate: Enum.Rates | number-- Rates Enum or Enum Id. ) → () Method to Update/Set the Default Rate of the Zone:  ","version":null,"tagName":"h3"},{"title":"SetSimulation​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#SetSimulation","content":"&lt;/&gt; Zone:SetSimulation( Simulation: Enum.Simulations | number-- Simulation Enum or Enum Id. ) → () Method to Update/Set the Default Simulation (RunService Event) of the Zone:  ","version":null,"tagName":"h3"},{"title":"LogConfig​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#LogConfig","content":"&lt;/&gt; Zone:LogConfig() → () Method to print out all the Config Names  ","version":null,"tagName":"h3"},{"title":"GetZoneParts​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#GetZoneParts","content":"&lt;/&gt; Zone:GetZoneParts() → {BasePart } Method to return the array of ZoneParts  ","version":null,"tagName":"h3"},{"title":"GetZonePartHolders​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#GetZonePartHolders","content":"&lt;/&gt; Zone:GetZonePartHolders() → {Instance } Method to return the array of ZonePartHolders  ","version":null,"tagName":"h3"},{"title":"GetRandomPoint​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#GetRandomPoint","content":"&lt;/&gt; Zone:GetRandomPoint() → Vector3 -- Point inside the zone volume Returns a random point within this Zone’s bounds. Works with partless boxes (math) and part-backed zones (shape-aware).  ","version":null,"tagName":"h3"},{"title":"GetTouchingParts​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#GetTouchingParts","content":"&lt;/&gt; Zone:GetTouchingParts() → {BasePart } Method to return an array of all BaseParts currently touching this Zone. Works for both Box-style and Part-style Zones  ","version":null,"tagName":"h3"},{"title":"Step​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#Step","content":"&lt;/&gt; Zone:Step( DeltaTime: number-- RunService event DeltaTime. ) → () Method that can be called manually in a custom RunService event to step the Zone's detection logic Only present if ManualStepping Config is true and the holder type is a group, if not, this method is removed  ","version":null,"tagName":"h3"},{"title":"BindToGroup​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#BindToGroup","content":"&lt;/&gt; Zone:BindToGroup( GroupName: string-- Name of the already created group to bind the Zone to ) → () Method that will BIND the Zone to the passed Group:  ","version":null,"tagName":"h3"},{"title":"UnbindFromGroup​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#UnbindFromGroup","content":"&lt;/&gt; Zone:UnbindFromGroup( GroupName: string-- Name of the already created group to bind the Zone to ) → () Method that will UNBIND the Zone to the passed Group:  ","version":null,"tagName":"h3"},{"title":"InGroup​","type":1,"pageTitle":"Zone","url":"/docs/Zoner/api/Zone#InGroup","content":"&lt;/&gt; Zone:InGroup( GroupName: string-- Name of the group to check ) → boolean Method to return whether the Zone is in the group or not ","version":null,"tagName":"h3"},{"title":"ZoneConfig Overview","type":0,"sectionRef":"#","url":"/docs/Zoner/docs/intro","content":"","keywords":"","version":"Next"},{"title":"Default Zone Configuration​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#default-zone-configuration","content":" -- Create a default Configs table constant: local DEFAULT_ZONE_CONFIG = { DetectionCoverage = Enums.DetectionCoverage.Center, DetectionMethod = Enums.DetectionMethod.Automatic, DetectionMode = Enums.DetectionMode.Point, Simulation = Enums.Simulation.PostSimulation, Execution = Enums.Execution.Parallel, Bounds = Enums.Bounds.Automatic, Rate = Enums.Rate.Fast, NoZonePartPropertyListening = false, NoZonePartAddedListening = false, ManualStepping = false, }   ","version":"Next","tagName":"h2"},{"title":"Detection Settings​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#detection-settings","content":" ","version":"Next","tagName":"h2"},{"title":"DetectionMethod​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#detectionmethod","content":" Determines the algorithm used to detect objects within the Zone volume.  Mode\tDescriptionAutomatic\tAutomatically selects the most suitable detection method based on the Zone container's shape and complexity. Efficient\tFastest option. Uses raw CFrame and Size math to test inclusion in the Zone bounds. Ideal for simple box/sphere volumes. Simple\tBalanced mode using GetPartBoundsInBox or GetPartBoundsInRadius under the hood. Provides solid accuracy at modest performance cost. Complex\tHighest accuracy. Uses detailed GetPartsInPart or mesh-aware tests. May create placeholder parts if the ZoneContainer is empty.    ","version":"Next","tagName":"h3"},{"title":"DetectionMode​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#detectionmode","content":" Controls how much of a target must be inside the Zone to count as &quot;within.&quot;  Mode\tDescriptionFull\tThe entire target must be inside or outside before triggering entrance or exit. Touch\tAny overlap or intersection with the Zone boundary counts. (Does not use .Touched events.) Point\tOnly representative points (e.g., center or probes) need to be inside. Extremely fast, works best with Efficient detection.    ","version":"Next","tagName":"h3"},{"title":"DetectionCoverage​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#detectioncoverage","content":" Specifies which parts of a target are considered during detection.  Mode\tDescriptionCenter\tOnly checks the object’s central point. Very fast, math-only. AllParts\tAll tracked parts must satisfy the DetectionMode. Strictest and slowest option. AnyPart\tAt least one part must satisfy DetectionMode. More lenient and performant.    ","version":"Next","tagName":"h3"},{"title":"Detection Extras​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#detection-extras","content":" Note:The following optional fields are not automatically filled and remain nil unless explicitly defined:  Field\tDescriptionExitDetectionMode\tThe DetectionMode used for checking what is trying to Exit the Zone. ExitDetectionCoverage\tThe DetectionCoverage used for checking what is trying to Exit the Zone. EnterDetectionMode\tThe DetectionMode used for checking what is trying to Enter the Zone. EnterDetectionCoverage\tThe DetectionCoverage used for checking what is trying to Enter the Zone.  ","version":"Next","tagName":"h3"},{"title":"Execution & Simulation Behavior​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#execution--simulation-behavior","content":" ","version":"Next","tagName":"h2"},{"title":"Execution​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#execution","content":" Determines how zone evaluation logic is executed internally.  Mode\tDescriptionSerial\tRuns all checks on a single thread. Allows manual stepping via Zone:Step(...) when ManualStepping = true. Parallel\tUses Roblox Actors for concurrent evaluation. Runs automatically and scales best for many Zones. Manual stepping not supported.    ","version":"Next","tagName":"h3"},{"title":"Simulation​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#simulation","content":" Specifies which stage of the Roblox simulation pipeline the Zone runs during.  Mode\tDescriptionPostSimulation\tExecutes after physics updates. Good for effects based on final part positions. PreSimulation\tRuns before physics; ideal for setting up constraints or forces. PreRender\tRuns before rendering (client-side only). On the server, coerced to PostSimulation.    ","version":"Next","tagName":"h3"},{"title":"Bounds Configuration​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#bounds-configuration","content":" ","version":"Next","tagName":"h2"},{"title":"Bounds​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#bounds","content":" Defines how the Zone determines its bounding volume.  Mode\tDescriptionAutomatic\tAuto-selects a bounding model (box, sphere, or per-part) based on container geometry. BoxExact\tCreates a precise rotated box that fits the ZoneContainer. No instance unless explicitly defined. BoxVoxel\tLike BoxExact but aligns to the voxel grid for grid-based zones. PerPart\tEvaluates each contained BasePart or {CFrame, Size} entry individually, combining their bounds to form the Zone.    ","version":"Next","tagName":"h3"},{"title":"Update/Detection Frequency​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#updatedetection-frequency","content":" ","version":"Next","tagName":"h2"},{"title":"Rate​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#rate","content":" Sets how frequently the Zone evaluates entries, exits, or triggers.  Mode\tStep Period\tDescriptionSlow\t≈ 1.0 s\tLow-frequency updates; best for large or low-priority zones. Moderate\t≈ 0.5 s\tMedium-frequency; general-purpose default. Fast\t≈ 0.1 s\tHigh-frequency checks for responsive gameplay interactions. Immediate\t0 s\tEvaluates every frame or heartbeat slice. Continuous mode; most CPU-intensive.    ","version":"Next","tagName":"h3"},{"title":"Event Listening & Manual Stepping​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#event-listening--manual-stepping","content":" ","version":"Next","tagName":"h2"},{"title":"Rate​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#rate-1","content":" Sets how frequently the Zone evaluates entries, exits, or triggers.  Property\tType\tDefault\tDescriptionNoZonePartPropertyListening\tboolean\tfalse\tDisables automatic property change monitoring on ZoneParts (e.g., Size or CFrame). When true, Zones will not auto-update their bounds. NoZonePartAddedListening\tboolean\tfalse\tDisables automatic updates when ZoneParts are added or removed from a ZoneContainer folder or model. ManualStepping\tboolean\tfalse\tOnly valid for Execution = Serial. Enables manual stepping via Zone:Step(DeltaTime) to control when Zone evaluations occur.    ","version":"Next","tagName":"h3"},{"title":"Example ZoneConfig Usage​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#example-zoneconfig-usage","content":" --!strict -- Require the Zoner Module: local Zoner = require(script.Parent.Vendor.Zoner) -- Reference a Part Box BasePart in Workspace to use as a Zone reference: -- (If enabled, Zoner will automatically update as the ZonePart moves or changes size) local ZoneBox: BasePart = workspace.Box -- Define a ZoneConfig table: -- Any of the following can be left blank, you don’t even need to use one: local ZoneConfig: Zoner.ZoneConfig = { DetectionCoverage = Zoner.Enum.DetectionCoverage.Center; DetectionMethod = Zoner.Enum.DetectionMethod.Efficient; DetectionMode = Zoner.Enum.DetectionMode.Point; Simulation = Zoner.Enum.Simulation.PostSimulation; Bounds = Zoner.Enum.Bounds.BoxExact; Execution = Zoner.Enum.Execution.Parallel; Rate = Zoner.Enum.Rate.Immediate; NoZonePartPropertyListening = false; NoZonePartAddedListening = false; ManualStepping = false; } -- Create the Zone Object using the ZoneBox and ZoneConfig: local Zone_From_Part: Zoner.Zone = Zoner.New(ZoneBox, ZoneConfig)   ","version":"Next","tagName":"h2"},{"title":"Summary​","type":1,"pageTitle":"ZoneConfig Overview","url":"/docs/Zoner/docs/intro#summary","content":" Any blank field in ZoneConfig defaults to DEFAULT_ZONE_CONFIG.Optional fields (Enter/ExitDetectionMode and Coverage) are nil by default.Event listening flags allow performance tuning for static zones.ManualStepping provides full control for serialized simulation updates.  This configuration gives you precise control over how Zones detect, simulate, and update—all within the Zoner framework. ","version":"Next","tagName":"h2"},{"title":"Zoner","type":0,"sectionRef":"#","url":"/docs/Zoner/api/Zoner","content":"","keywords":"","version":null},{"title":"Types​","type":1,"pageTitle":"Zoner","url":"/docs/Zoner/api/Zoner#types","content":" ","version":null,"tagName":"h2"},{"title":"ZoneConfig​","type":1,"pageTitle":"Zoner","url":"/docs/Zoner/api/Zoner#ZoneConfig","content":"public_types &lt;/&gt; interface ZoneConfig { DetectionCoverage: DetectionCoverage? DetectionMethod: DetectionMethod? DetectionMode: DetectionMode? Simulation: Simulation? Execution: Execution? Bounds: Bounds? Rate: Rate? ExitDetectionMode: DetectionMode? ExitDetectionCoverage: DetectionCoverage? EnterDetectionMode: DetectionMode? EnterDetectionCoverage: DetectionCoverage? NoZonePartPropertyListening: boolean? NoZonePartAddedListening: boolean? ManualStepping: boolean? }   ","version":null,"tagName":"h3"},{"title":"ZoneContainer​","type":1,"pageTitle":"Zoner","url":"/docs/Zoner/api/Zoner#ZoneContainer","content":"public_types &lt;/&gt; type ZoneContainer = (Model | Folder | BasePart | {BasePart } | {[string]: BasePart } | ZoneBoxes) A type of Zone &quot;Part&quot;. Instanceless representation of a single Zone Box  ","version":null,"tagName":"h3"},{"title":"ZoneBox​","type":1,"pageTitle":"Zoner","url":"/docs/Zoner/api/Zoner#ZoneBox","content":"private_types &lt;/&gt; type ZoneBox = { CFrame: CFrame , Size: Vector3 } A type of Zone &quot;Part&quot;. Instanceless representation of a single Zone Box  ","version":null,"tagName":"h3"},{"title":"ZoneBoxs​","type":1,"pageTitle":"Zoner","url":"/docs/Zoner/api/Zoner#ZoneBoxs","content":"private_types &lt;/&gt; type ZoneBoxs = {ZoneBox} An array of ZoneBoxes. Useful to create multiple, instanceless Zone boxes as one container ","version":null,"tagName":"h3"},{"title":"Properties​","type":1,"pageTitle":"Zoner","url":"/docs/Zoner/api/Zoner#properties","content":" ","version":null,"tagName":"h2"},{"title":"ZONER_COLLISION_GROUP​","type":1,"pageTitle":"Zoner","url":"/docs/Zoner/api/Zoner#ZONER_COLLISION_GROUP","content":"This item is read only and cannot be modified. Read Only collision_groups &lt;/&gt; Zoner.ZONER_COLLISION_GROUP: string The collision group string used by Zoner internally for ZoneParts Accessed: Zoner.ZONER_COLLISION_GROUP ","version":null,"tagName":"h3"},{"title":"Functions​","type":1,"pageTitle":"Zoner","url":"/docs/Zoner/api/Zoner#functions","content":" ","version":null,"tagName":"h2"},{"title":"NewFromContainer​","type":1,"pageTitle":"Zoner","url":"/docs/Zoner/api/Zoner#NewFromContainer","content":"&lt;/&gt; Zoner.NewFromContainer( ZoneContainer: ZoneContainer,-- Boundaries of the zone. ZoneConfig: ZoneConfig?-- Optional zone tuning configs. ) → Zone-- The constructed zone object. Creates a new Zone from a part, model, folder, config, or a list of zone boxes.  ","version":null,"tagName":"h3"},{"title":"New​","type":1,"pageTitle":"Zoner","url":"/docs/Zoner/api/Zoner#New","content":"&lt;/&gt; Zoner.New( ZoneContainer: ZoneContainer,-- Boundaries of the zone. ZoneConfig: ZoneConfig?-- Optional zone tuning configs. ) → Zone-- The constructed zone object. Creates a new Zone from a part, model, folder, config, or a list of zone boxes.  ","version":null,"tagName":"h3"},{"title":"NewZoneFromRegion​","type":1,"pageTitle":"Zoner","url":"/docs/Zoner/api/Zoner#NewZoneFromRegion","content":"&lt;/&gt; Zoner.NewZoneFromRegion( RegionCFrame: CFrame ,-- Position and rotation of the region. RegionSize: Vector3 ,-- Dimensions of the region. ZoneConfig?: ZoneConfig-- Optional configuration. ) → Zone-- The constructed region zone. Creates a new zone from a region defined by a CFrame and Size vector.  ","version":null,"tagName":"h3"},{"title":"NewZoneFromBox​","type":1,"pageTitle":"Zoner","url":"/docs/Zoner/api/Zoner#NewZoneFromBox","content":"&lt;/&gt; Zoner.NewZoneFromBox( BoxCFrame: CFrame ,-- Position and rotation of the region. BoxSize: Vector3 ,-- Dimensions of the region. ZoneConfig?: ZoneConfig-- Optional configuration. ) → Zone-- The constructed region zone. Creates a new zone from a box defined by a CFrame and Size vector.  ","version":null,"tagName":"h3"},{"title":"RelocateZonerFolder​","type":1,"pageTitle":"Zoner","url":"/docs/Zoner/api/Zoner#RelocateZonerFolder","content":"&lt;/&gt; Zoner.RelocateZonerFolder( Location: Instance? -- the Location to send the Folder (usually a service) ) → () Relocates the Zoner Folder which stores the Zone Instances  ","version":null,"tagName":"h3"},{"title":"CreateGroup​","type":1,"pageTitle":"Zoner","url":"/docs/Zoner/api/Zoner#CreateGroup","content":"&lt;/&gt; Zoner.CreateGroup( self: Zoner,-- The current Zoner context. GroupName: string,-- Name to store as. Properties: ZoneGroupProperties-- Properties associated with this group ) → () Creates a new Zone Group to be bound to: ","version":null,"tagName":"h3"}],"options":{"id":"default"}}